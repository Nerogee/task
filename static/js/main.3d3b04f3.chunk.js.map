{"version":3,"sources":["assets/images/star_emtpy.png","assets/images/star_fill.png","containers/App/redux.js","containers/Listing/redux.js","containers/Search/redux.js","config/settings.js","utils/Utils.js","containers/Search/index.js","components/star/index.js","components/TrackVisibility/index.js","containers/Listing/index.js","containers/Recommendation/redux.js","config/endpoint.js","containers/Recommendation/index.js","components/spinner/index.js","containers/App/index.js","serviceWorker.js","containers/configureStore.js","index.js"],"names":["module","exports","__webpack_require__","p","types","UPDATE_LOADING_STATUS","initialState","isLoading","actions","updateLoading","status","type","UPDATE_APP_LIST","UPDATE_PREVENT_LOADING","appList","preventLoading","updateAppList","updatePreventLoading","newStatus","CHANGE_SEARCH_TERM","searchTerm","changeSearchTerm","newValue","APP_COUNT_PER_PAGE","GROSS_APP_LIST_TIME_TO_LIVE","filterApp","item","game_categories","genres","constructor","Array","map","push","name","hayStack","needle","search_content","artistName","concat","i","length","undefined","String","toLowerCase","indexOf","trim","Search","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSearchChange","bind","assertThisInitialized","event","window","clearTimeout","setTimeout","target","value","react_default","a","createElement","className","search","onChange","Search_default","Component","connect","state","recommendation","dispatch","objectSpread","bindActionCreators","SearchActions","ListingActions","Star","toConsumableArray","keys","imageSrc","rating","star_fill","star_empty","key","src","alt","TrackVisibility","ref","React","createRef","observer","IntersectionObserver","_ref","entry","slicedToArray","intersectionRatio","root","rootScrollContainer","rootMargin","threshold","current","observe","customClassName","children","Listing","listing","slice","pageNumber","index","TrackVisibility_TrackVisibility","id","artworkUrl100","star_Star","averageUserRating","userRatingCount","app","AppActions","UPDATE_GROSS_LIST","grossAppList","updateGrossList","API","APP_LIST","GROSS_APP_LIST","Recommendation","fetchGrossAppList","cacheGrossAppList","localStorage","getItem","Date","now","removeItem","JSON","parse","fetchGrossAppListFromLocalStorage","fetch","method","headers","Accept","then","response","json","header","ok","setItem","stringify","alert","catch","error","_this2","lib_default","dots","infinite","speed","slidesToShow","slidesToScroll","swipeToSlide","responsive","breakpoint","settings","RecommendationActions","Spinner","App","haveMoreApp","fetchAppList","addEventListener","scrollTop","clientHeight","scrollHeight","removeAllListeners","_this3","cachedAppList","cacheAppList","fetchAppListFromLocalStorage","newAppList","assign","setState","Content-Type","body","list","totalRecord","containers_Search","containers_Recommendation","containers_Listing","spinner","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","rootReducer","combineReducers","arguments","action","store","createStore","ReactDOM","render","es","containers_App","document","getElementById","URL","process","href","origin","contentType","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3d3b04f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/star_emtpy.6f373829.png\";","module.exports = __webpack_public_path__ + \"static/media/star_fill.0178cc98.png\";","export const types = {\r\n    UPDATE_LOADING_STATUS: \"LOADING\"\r\n}\r\n\r\nconst initialState = {\r\n    isLoading: false\r\n}\r\n\r\n\r\nexport const actions = {\r\n    updateLoading: (status) => ({\r\n        type: types.UPDATE_LOADING_STATUS,\r\n        status: status\r\n    })\r\n}\r\n\r\n// Reducer\r\nexport default function reducer(state = initialState, action = {}) {\r\n    switch (action.type) {\r\n        case types.UPDATE_LOADING_STATUS:\r\n            return {\r\n                isLoading: action.status\r\n            }\r\n        default: return state;\r\n    }\r\n}","export const types = {\r\n    UPDATE_APP_LIST: \"update_app_list\",\r\n    UPDATE_PREVENT_LOADING: 'update_prevent_loading'\r\n}\r\n\r\nconst initialState = {\r\n    appList: [],\r\n    preventLoading: false\r\n}\r\n\r\n\r\nexport const actions = {\r\n    updateAppList: (appList) => ({\r\n        type: types.UPDATE_APP_LIST,\r\n        appList: appList\r\n    }),\r\n    updatePreventLoading: (newStatus) => ({\r\n        type: types.UPDATE_PREVENT_LOADING,\r\n        newStatus: newStatus\r\n    })\r\n}\r\n\r\n// Reducer\r\nexport default function reducer(state = initialState, action = {}) {\r\n    switch (action.type) {\r\n        case types.UPDATE_APP_LIST:\r\n            return {\r\n                ...state,\r\n                appList: action.appList\r\n            }\r\n        case types.UPDATE_PREVENT_LOADING:\r\n            return {\r\n                ...state,\r\n                preventLoading: action.newStatus\r\n            }\r\n        default: return state;\r\n    }\r\n}","export const types = {\r\n    CHANGE_SEARCH_TERM: 'CHANGE_SEARCH_TERM'\r\n}\r\n\r\nconst initialState = {\r\n    searchTerm: ''\r\n}\r\n\r\n\r\nexport const actions = {\r\n    changeSearchTerm: (newValue) => ({\r\n        type: types.CHANGE_SEARCH_TERM,\r\n        searchTerm: newValue\r\n    })\r\n}\r\n\r\n// Reducer\r\nexport default function reducer(state = initialState, action = {}) {\r\n    switch (action.type) {\r\n        case types.CHANGE_SEARCH_TERM:\r\n            return {\r\n                searchTerm: action.searchTerm\r\n            }\r\n        default: return state;\r\n    }\r\n}","export const APP_COUNT_PER_PAGE = 10;\r\nexport const APP_LIST_TIME_TO_LIVE = 600000; //millisecond, 600 second or 10 minutes\r\nexport const GROSS_APP_LIST_TIME_TO_LIVE = 600000; //millisecond, 600 second or 10 minutes","import { APP_COUNT_PER_PAGE } from \"../config/settings\";\r\n\r\nexport function isContain(hayStack, needle) {\r\n    if (hayStack === undefined || hayStack.constructor !== String) return false;\r\n    return hayStack.toLowerCase().indexOf(needle.toLowerCase().trim()) !== -1;\r\n}\r\n\r\nexport function isSearchTermExist(searchTerm) {\r\n    return !(searchTerm === undefined || searchTerm.constructor !== String || searchTerm.trim().length <= 0);\r\n}\r\n\r\nexport function filterApp(item, searchTerm) {\r\n\r\n    let game_categories = [];\r\n    if (item.genres.constructor === Array) {\r\n        item.genres.map((item)=>{\r\n            game_categories.push(item.name);\r\n        })\r\n    }\r\n\r\n    let search_content = [item.name, item.artistName].concat(game_categories);\r\n    for (let i = 0; i < search_content.length; i++) {\r\n        if (isContain(search_content[i], searchTerm)) return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n\r\nexport function fetchAppListFromLocalStorage(pageNumber) {\r\n\r\n    if (localStorage.getItem('appListExpireAt') < Date.now()) {\r\n        localStorage.removeItem('cacheAppList');\r\n        localStorage.removeItem('totalRecord');\r\n        localStorage.removeItem('appListExpireAt');\r\n        return [];\r\n    } else {\r\n        let cacheAppList = JSON.parse(localStorage.getItem('cacheAppList'));\r\n        if (cacheAppList != null && cacheAppList.constructor === Array) {\r\n            return cacheAppList.slice((pageNumber-1) * APP_COUNT_PER_PAGE, (pageNumber * APP_COUNT_PER_PAGE));\r\n        }\r\n        return [];\r\n    }\r\n}\r\n\r\nexport function fetchGrossAppListFromLocalStorage() {\r\n\r\n    if (localStorage.getItem('grossAppListExpireAt') < Date.now()) {\r\n        localStorage.removeItem('cacheGrossAppList');\r\n        localStorage.removeItem('grossAppListExpireAt');\r\n        return [];\r\n    } else {\r\n        let cacheGrossAppList = JSON.parse(localStorage.getItem('cacheGrossAppList'));\r\n        if (cacheGrossAppList != null && cacheGrossAppList.constructor === Array) {\r\n            return cacheGrossAppList;\r\n        }\r\n        return [];\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { actions as SearchActions} from \"./redux\";\r\nimport { actions as ListingActions} from \"../Listing/redux\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { isSearchTermExist } from \"../../utils/Utils\";\r\nimport \"../../assets/css/search/index.scss\";\r\n\r\nclass Search extends Component\r\n{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleSearchChange = this.handleSearchChange.bind(this);\r\n    }\r\n\r\n    handleSearchChange(event) {\r\n        // When typing scroll to top, the list\r\n        window.clearTimeout(this.setTimeout);\r\n        this.props.updatePreventLoading(true);\r\n        this.setTimeout = window.setTimeout(function(){\r\n            this.props.updatePreventLoading(false)\r\n        }.bind(this), 100);\r\n        this.props.changeSearchTerm(event.target.value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app-search-wrapper\">\r\n                <div className=\"app-search__search-box-wrapper\">\r\n                    <input className=\"app-search__search-box\" value={this.props.search.searchTerm} onChange={this.handleSearchChange}/>\r\n                    {\r\n                        isSearchTermExist(this.props.search.searchTerm) ? null:  <div className=\"app-search__placeholder\"><SearchIcon className=\"search-icon\"/>搜尋</div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    return {\r\n        search: state.search,\r\n        recommendation: state.recommendation,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        ...bindActionCreators(SearchActions, dispatch),\r\n        ...bindActionCreators(ListingActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport star_empty from \"../../assets/images/star_emtpy.png\";\r\nimport star_fill from \"../../assets/images/star_fill.png\";\r\n\r\nexport default class Star extends Component {\r\n    render() {\r\n        return (\r\n            [...Array(5).keys()].map((item)=>{\r\n                let imageSrc = item < this.props.rating ? star_fill : star_empty;\r\n                let status = item < this.props.rating ? \"active\" : \"inactive\";\r\n                return <img key={item} className={ \"star \" + status } src={imageSrc} alt=\"star\"/>;\r\n            })\r\n        )\r\n    }\r\n}\r\n\r\nStar.propTypes = {\r\n    rating: PropTypes.number\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./styles.scss\";\r\n\r\nexport default class TrackVisibility extends Component {\r\n    ref = React.createRef();\r\n\r\n    async componentDidMount() {\r\n        const observer = new IntersectionObserver(\r\n            ([entry]) => {\r\n                if (entry.intersectionRatio >=0.1) {\r\n                    if (entry.target.className.indexOf('fly-in') === -1) {\r\n                        entry.target.className = entry.target.className + ' fly-in';\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                root: this.props.rootScrollContainer,\r\n                rootMargin: '80px',\r\n                threshold: 0.1\r\n            }\r\n        )\r\n\r\n        if (this.ref.current) {\r\n            observer.observe(this.ref.current)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div className={\"visibility-wrapper \" + this.props.customClassName} ref={this.ref}>{this.props.children}</div>\r\n    }\r\n}\r\n\r\nTrackVisibility.propTypes = {\r\n    customClassName: PropTypes.string,\r\n    rootScrollContainer: PropTypes.object\r\n}","import React, { Component } from 'react';\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { actions as ListingActions} from \"./redux\";\r\nimport { actions as AppActions} from \"../App/redux\";\r\n\r\nimport Star from '../../components/star';\r\nimport TrackVisibility from '../../components/TrackVisibility';\r\nimport { filterApp } from \"../../utils/Utils\";\r\nimport \"../../assets/css/listing/index.scss\";\r\n\r\nclass Listing extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"app-listing-wrapper\">\r\n                <div className=\"listing-wrapper\" >\r\n                    {\r\n                        this.props.listing.appList.slice(0, (this.props.pageNumber - 1)  * 10).map((item, index)=>{\r\n                            return filterApp(item, this.props.search.searchTerm) ?\r\n                                (\r\n                                    <TrackVisibility customClassName=\"listing-app-row\" key={item.id} rootScrollContainer={this.props.rootScrollContainer}>\r\n                                        <div className=\"listing-app-row__ranking\">{index + 1}</div>\r\n                                        <div className=\"listing-app-row__image-wrapper\">\r\n                                            <img className=\"listing-app-row__image\" src={item.artworkUrl100} alt=\"app icon\"/>\r\n                                        </div>\r\n                                        <div className=\"listing-app-row__app-info\">\r\n                                            <div>{item.name}</div>\r\n                                            <div className=\"listing-app-row__app-info-genre\">{item.genres[0].name}</div>\r\n                                            <div className=\"listing-app-row__app-info-rating\">\r\n                                                <Star rating={item.averageUserRating} />\r\n                                                <div className=\"listing-app-row__app-info-rating-count\">({item.userRatingCount})</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </TrackVisibility>\r\n                                ) : null\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    return {\r\n        app: state.app,\r\n        listing: state.listing,\r\n        search: state.search\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        ...bindActionCreators(ListingActions, dispatch),\r\n        ...bindActionCreators(AppActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Listing);","export const types = {\r\n    UPDATE_GROSS_LIST: 'update_gross_list'\r\n}\r\n\r\nconst initialState = {\r\n    grossAppList: []\r\n}\r\n\r\n\r\nexport const actions = {\r\n    updateGrossList: (grossAppList) => ({\r\n        type: types.UPDATE_GROSS_LIST,\r\n        grossAppList: grossAppList\r\n    })\r\n}\r\n\r\n// Reducer\r\nexport default function reducer(state = initialState, action = {}) {\r\n    switch (action.type) {\r\n        case types.UPDATE_GROSS_LIST:\r\n            return {\r\n                grossAppList: action.grossAppList\r\n            }\r\n        default: return state;\r\n    }\r\n}","const API = {\r\n    APP_LIST: \"https://dev.dozenbird.com/frontend/applist\",\r\n    GROSS_APP_LIST: \"https://dev.dozenbird.com/frontend/top10GrossApp\",\r\n}\r\n\r\nexport default API;","import React, { Component } from 'react';\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { actions as RecommendationActions} from \"./redux\";\r\nimport API from \"../../config/endpoint\";\r\nimport { filterApp, fetchGrossAppListFromLocalStorage } from \"../../utils/Utils\";\r\nimport { GROSS_APP_LIST_TIME_TO_LIVE } from \"../../config/settings\";\r\nimport Slider from \"react-slick\";\r\nimport \"../../assets/css/recommendation/index.scss\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nclass Recommendation extends Component {\r\n    componentDidMount() {\r\n        this.fetchGrossAppList();\r\n    }\r\n\r\n    fetchGrossAppList = ()=> {\r\n        let cacheGrossAppList = fetchGrossAppListFromLocalStorage();\r\n        if (cacheGrossAppList.length > 0) {\r\n            this.props.updateGrossList(cacheGrossAppList);\r\n            return false;\r\n        }\r\n\r\n        fetch(API.GROSS_APP_LIST, {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Accept': 'application/json'\r\n            }\r\n        }).then(response => response.json().then(json=>({\r\n                header: response,\r\n                json\r\n            })\r\n        )).then(({header, json}) => {\r\n            if (!header.ok) {\r\n                alert(\"Fetch Gross App List Fail\");\r\n            } else {\r\n                this.props.updateGrossList(json.grossAppList);\r\n\r\n                localStorage.setItem('cacheGrossAppList', JSON.stringify(json.grossAppList));\r\n                localStorage.setItem('grossAppListExpireAt', Date.now() + GROSS_APP_LIST_TIME_TO_LIVE);\r\n            }\r\n        }).catch (error => {\r\n            alert(\"Fetch Gross App List Fail\");\r\n        })\r\n    }\r\n\r\n    render() {\r\n        var settings = {\r\n            dots: false,\r\n            infinite: false,\r\n            speed: 500,\r\n            slidesToShow: 10,\r\n            slidesToScroll: 1,\r\n            swipeToSlide: true,\r\n            responsive: [\r\n                {\r\n                    breakpoint: 1280,\r\n                    settings: {\r\n                        slidesToShow: 8,\r\n                        slidesToScroll: 1\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 1024,\r\n                    settings: {\r\n                        slidesToShow: 6,\r\n                        slidesToScroll: 1\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 720,\r\n                    settings: {\r\n                        slidesToShow: 5,\r\n                        slidesToScroll: 1\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 480,\r\n                    settings: {\r\n                        slidesToShow: 4,\r\n                        slidesToScroll:1\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 375,\r\n                    settings: {\r\n                        slidesToShow: 4,\r\n                        slidesToScroll:1\r\n                    }\r\n                }\r\n            ]\r\n        };\r\n        return (\r\n            <div className=\"app-recommendation-wrapper\">\r\n                <div className=\"app-recommendation__title\">推介</div>\r\n                <div className=\"app-recommendation-row\">\r\n                    <Slider {...settings}>\r\n                {\r\n                    this.props.recommendation.grossAppList.map((item, index)=> {\r\n                        return filterApp(item, this.props.search.searchTerm)\r\n                            ?\r\n                        (\r\n\r\n                                <div key={item.id} className=\"app-recommendation-row__app-item\">\r\n                                    <img className=\"app-recommendation-row__app-item-image\" src={item.artworkUrl100}\r\n                                         alt=\"app icon\"/>\r\n                                    <div className=\"app-recommendation-row__app-item-name\">{item.name}</div>\r\n                                    <div className=\"app-recommendation-row__app-info-genre\">{item.genres[0].name}</div>\r\n                                </div>\r\n\r\n\r\n                        ) : null\r\n                    })\r\n                }\r\n                </Slider>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    return {\r\n        app: state.app,\r\n        recommendation: state.recommendation,\r\n        search: state.search,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        ...bindActionCreators(RecommendationActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Recommendation);","import React from 'react';\r\nimport \"./styles.scss\";\r\nclass Spinner extends React.Component {\r\n    render(){\r\n        return (\r\n            <div className=\"admin__data-grid-loading-mask\">\r\n                <div className=\"spinner\">\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { actions as AppActions } from \"../App/redux\"\r\nimport { actions as ListingActions } from \"../Listing/redux\"\r\nimport Search from \"../Search\";\r\nimport Listing from \"../Listing\";\r\nimport Recommendation from \"../Recommendation\";\r\nimport Spinner from '../../components/spinner';\r\nimport API from \"../../config/endpoint\";\r\nimport { fetchAppListFromLocalStorage } from \"../../utils/Utils\";\r\nimport { APP_LIST_TIME_TO_LIVE } from \"../../config/settings\";\r\nimport \"../../assets/css/app/index.scss\";\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pageNumber: 1,\r\n            haveMoreApp: true\r\n        }\r\n        this.fetchAppList = this.fetchAppList.bind(this);\r\n    }\r\n\r\n    rootScrollContainer = React.createRef();\r\n\r\n    componentDidMount() {\r\n        this.fetchAppList();\r\n        this.rootScrollContainer.current.addEventListener(\"scroll\", () => {\r\n            if (this.rootScrollContainer.current.scrollTop + this.rootScrollContainer.current.clientHeight + 100 >=this.rootScrollContainer.current.scrollHeight){\r\n                if (this.state.haveMoreApp) {\r\n                    this.fetchAppList();\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.rootScrollContainer.current.removeAllListeners();\r\n    }\r\n\r\n    fetchAppList(){\r\n        if (this.props.listing.preventLoading || this.props.app.isLoading || !this.state.haveMoreApp) return false;\r\n        this.props.updateLoading(true);\r\n\r\n        // start: get app list from local cache if exist\r\n        let cachedAppList = fetchAppListFromLocalStorage(this.state.pageNumber);\r\n        if (cachedAppList.length > 0) {\r\n            let newAppList = Object.assign([], [...this.props.listing.appList]).concat(cachedAppList);\r\n            this.props.updateAppList(newAppList);\r\n            this.setState({\r\n                pageNumber:this.state.pageNumber+1,\r\n                haveMoreApp: newAppList.length < localStorage.getItem('totalRecord')\r\n            });\r\n            this.props.updateLoading(false);\r\n            return false;\r\n        }\r\n        // end\r\n\r\n        fetch(API.APP_LIST, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                pageNumber: this.state.pageNumber\r\n            })\r\n        }).then(response => response.json().then(json=>({\r\n                header: response,\r\n                json\r\n            })\r\n        )).then(({header, json}) => {\r\n            if (!header.ok) {\r\n                alert(\"Fetch App List Fail\");\r\n            } else {\r\n                let appList = Object.assign([], [...this.props.listing.appList]).concat(json.list);\r\n                this.props.updateAppList(appList);\r\n                this.setState({\r\n                    pageNumber:this.state.pageNumber+1,\r\n                    haveMoreApp: json.haveMoreApp\r\n                });\r\n\r\n                localStorage.setItem('cacheAppList', JSON.stringify(appList));\r\n                localStorage.setItem('totalRecord', json.totalRecord);\r\n                localStorage.setItem('appListExpireAt', Date.now() + APP_LIST_TIME_TO_LIVE);\r\n            }\r\n            this.props.updateLoading(false);\r\n\r\n        }).catch (error => {\r\n            this.props.updateLoading(false);\r\n            alert(\"Fetch App List Fail\");\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <Search/>\r\n                <div className=\"app-scroll-wrapper\" ref={this.rootScrollContainer}>\r\n                    <Recommendation/>\r\n                    <Listing pageNumber={this.state.pageNumber} rootScrollContainer={this.rootScrollContainer.current} />\r\n                </div>\r\n                <div className=\"app-wrapper__loading-indicator\">\r\n                    { this.props.app.isLoading ? <Spinner/> : null }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    return {\r\n        app: state.app,\r\n        listing: state.listing,\r\n        search: state.search\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        ...bindActionCreators(AppActions, dispatch),\r\n        ...bindActionCreators(ListingActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createStore, combineReducers } from 'redux';\r\nimport appReducer from './App/redux';\r\nimport searchReducer from './Search/redux';\r\nimport ListingReducer from './Listing/redux';\r\nimport recommendationReducer from './Recommendation/redux';\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    search: searchReducer,\r\n    listing: ListingReducer,\r\n    recommendation: recommendationReducer,\r\n})\r\n\r\nexport default function configureStore(initialState) {\r\n    return createStore(rootReducer);\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport configureStore from \"./containers/configureStore\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}